#!/usr/bin/env ruby

require 'rubygems'
require 'fog'
require 'thor'

Fog.mock!


# connect to vsphere instance 
# credentials in ~/.fog
# f=Fog::Compute.net(:provider => "vsphere")


# if iterating through instances is slow, then templates needs to be found by path -
# no methods for finding just templates, just another vm instance

#create new vm
#new_vm=f.vm_clone('instance_uuid' => '564d3f91-3452-a509-a678-1246f7897979', 'name' => 'clonedvm', 'path' => '/Datacenters/C/')

class VsphereCLI < Thor
  
  @@f=Fog::Compute.new(:provider => "vsphere", :vsphere_username => "patrick", :vsphere_password=> "pipo1234**", :vsphere_server => "172.16.44.141")
  #attributes to display in tables
  @@attributes = [:name, :instance_uuid, :hypervisor, :is_a_template]
  
  desc "templates", "list the templates" 
  def templates
    result = Array.new
    @@f.servers.each do |x|
      result.push(x) if x.is_a_template == true
    end
    Formatador.display_table(result.map {|x| x.attributes}, @@attributes)
  end
  
  desc "vm", "list all virtual machines, including templates"
  def vm
    @@f.servers.table(@@attributes)
  end
  
  desc "instances", "list all virtual machine instances"
  def instances
    result = Array.new
    @@f.servers.each do |x|
      result.push(x) if x.is_a_template != true
    end
    Formatador.display_table(result.map {|x| x.attributes}, @@attributes)
  end
end

VsphereCLI.start
